version: 0.2

phases:
  install:
    runtime-versions:
      docker: 19
    commands:
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin
      - |
        for i in {1..5}; do
          if aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_DEFAULT_REGION; then
            echo "Successfully configured kubectl"
            break
          else
            echo "Attempt $i failed, retrying in 10 seconds..."
            if [ $i -eq 5 ]; then
              echo "Failed to configure kubectl after 5 attempts"
              exit 1
            fi
            sleep 10
          fi
        done

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker images...
      - docker build --target frontend -t $IMAGE_REPO_NAME:$IMAGE_TAG . || exit 1
      - docker build --target backend -t $IMAGE_REPO_NAME-backend:$IMAGE_TAG . || exit 1
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - BACKEND_REPO_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME-backend
      - docker tag $IMAGE_REPO_NAME-backend:$IMAGE_TAG $BACKEND_REPO_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $BACKEND_REPO_URI:$IMAGE_TAG
      - echo Deploying to EKS...
      - sed -i 's|IMAGE_URI|'$REPOSITORY_URI:$IMAGE_TAG'|g' k8s-deployment.yaml
      - kubectl apply -f k8s-deployment.yaml
      - sed -i 's|BACKEND_IMAGE_URI|'$BACKEND_REPO_URI:$IMAGE_TAG'|g' backend-deployment.yaml
      - kubectl apply -f backend-deployment.yaml
      - kubectl apply -f monitoring.yaml
      - echo "Starting port-forward for Grafana..."
      - nohup kubectl port-forward -n monitoring svc/grafana-service 3000:3000 --address 0.0.0.0 > /tmp/grafana-port-forward.log 2>&1 &